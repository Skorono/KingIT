// <auto-generated />
using System;
using KingIT.ModelDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KingIT.Migrations
{
    [DbContext(typeof(KingITContext))]
    [Migration("20231006160346_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KingIT.ModelDB.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("StatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("StatusID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KingIT.ModelDB.Pavilion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("AddedCoefficient")
                        .HasColumnType("real");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShoppingСenterID")
                        .HasColumnType("int");

                    b.Property<float>("Square")
                        .HasColumnType("real");

                    b.Property<int>("SquareMeterCost")
                        .HasColumnType("int");

                    b.Property<string>("StatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("ShoppingСenterID");

                    b.HasIndex("StatusID");

                    b.ToTable("Pavilions");
                });

            modelBuilder.Entity("KingIT.ModelDB.PavilionStaff", b =>
                {
                    b.Property<int>("PavilionID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("PavilionID", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("PavilionStaff");
                });

            modelBuilder.Entity("KingIT.ModelDB.PavilionStatus", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PavilionStatuses");

                    b.HasData(
                        new
                        {
                            ID = "D",
                            Name = "Deleted"
                        },
                        new
                        {
                            ID = "R",
                            Name = "Rented"
                        },
                        new
                        {
                            ID = "B",
                            Name = "Booked"
                        },
                        new
                        {
                            ID = "F",
                            Name = "Free"
                        });
                });

            modelBuilder.Entity("KingIT.ModelDB.Rent", b =>
                {
                    b.Property<int>("RentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentID"));

                    b.Property<int>("PavilionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentalID")
                        .HasColumnType("int");

                    b.HasKey("RentID");

                    b.HasIndex("PavilionID");

                    b.HasIndex("RentalID");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("KingIT.ModelDB.Rental", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("KingIT.ModelDB.Role", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = "A",
                            Name = "Administrator"
                        },
                        new
                        {
                            ID = "E",
                            Name = "ManagerA"
                        },
                        new
                        {
                            ID = "C",
                            Name = "ManagerC"
                        });
                });

            modelBuilder.Entity("KingIT.ModelDB.ShoppingCenterStatus", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ShoppingCenterStatuses");

                    b.HasData(
                        new
                        {
                            ID = "P",
                            Name = "Plan"
                        },
                        new
                        {
                            ID = "C",
                            Name = "Construction"
                        },
                        new
                        {
                            ID = "R",
                            Name = "Realization"
                        },
                        new
                        {
                            ID = "D",
                            Name = "Deleted"
                        });
                });

            modelBuilder.Entity("KingIT.ModelDB.ShoppingСenter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("AddedCoefficient")
                        .HasColumnType("real");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("FloorsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TownID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TownID");

                    b.ToTable("ShoppingCenters");
                });

            modelBuilder.Entity("KingIT.ModelDB.Town", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("KingIT.ModelDB.UserStatus", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserStatuses");

                    b.HasData(
                        new
                        {
                            ID = "A",
                            Name = "Active"
                        },
                        new
                        {
                            ID = "B",
                            Name = "Blocked"
                        },
                        new
                        {
                            ID = "F",
                            Name = "Freezed"
                        },
                        new
                        {
                            ID = "D",
                            Name = "Deleted"
                        });
                });

            modelBuilder.Entity("KingIT.ModelDB.Employee", b =>
                {
                    b.HasOne("KingIT.ModelDB.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingIT.ModelDB.UserStatus", "Status")
                        .WithMany("Employees")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("KingIT.ModelDB.Pavilion", b =>
                {
                    b.HasOne("KingIT.ModelDB.ShoppingСenter", "ShoppingСenter")
                        .WithMany()
                        .HasForeignKey("ShoppingСenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingIT.ModelDB.PavilionStatus", "Status")
                        .WithMany("Pavilions")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingСenter");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("KingIT.ModelDB.PavilionStaff", b =>
                {
                    b.HasOne("KingIT.ModelDB.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingIT.ModelDB.Pavilion", "Pavilion")
                        .WithMany()
                        .HasForeignKey("PavilionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Pavilion");
                });

            modelBuilder.Entity("KingIT.ModelDB.Rent", b =>
                {
                    b.HasOne("KingIT.ModelDB.Pavilion", "Pavilion")
                        .WithMany()
                        .HasForeignKey("PavilionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingIT.ModelDB.Rental", "Rental")
                        .WithMany()
                        .HasForeignKey("RentalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pavilion");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("KingIT.ModelDB.ShoppingСenter", b =>
                {
                    b.HasOne("KingIT.ModelDB.ShoppingCenterStatus", "Status")
                        .WithMany("ShoppingCenters")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KingIT.ModelDB.Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("KingIT.ModelDB.PavilionStatus", b =>
                {
                    b.Navigation("Pavilions");
                });

            modelBuilder.Entity("KingIT.ModelDB.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("KingIT.ModelDB.ShoppingCenterStatus", b =>
                {
                    b.Navigation("ShoppingCenters");
                });

            modelBuilder.Entity("KingIT.ModelDB.UserStatus", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
